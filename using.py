# подключаешь api
from src import api

# понядобится для задержки между запросами, чтоб сервер успевал их полностью получить
from time import sleep

from src.core import utils


"""
все что связано с клиентом ------------------------------------------------------------------------------------
"""



# создает обьект клиента для сессии (порт хост)
ClientObject = api.HWIClient(
    port=utils.LOCAL_PORT, # локальный порт
    host=utils.LOCAL_HOST  # локальный хост
)

ClientObject.connect()     # попытка подключения

# далее примеры запросов

ClientObject.request(
    api.Requests.GET_FOR_DATE(
        data='12.09.2024' # принимает дату и возвращает все задание которые были даны данного числа
    )
) # возвращает список

ClientObject.request(
    api.Requests.GET_FOR_WAIT_DATE(
        data='12.09.2024' # принимает дату и возвращает все задания которые необходимо выполнить до заданного числа
    )
) # возвращает список

ClientObject.request(
    api.Requests.GET_ALL() # ничего не принимает
) # возвращает полный список всего

ClientObject.request(
    api.Requests.ADD_INFO(
        info=[
            'Иван',             # имя того кто добавляет это задание ( можно будет взять просто имя рользователя телеграмм ) но лучше сделать ввод имени
            'Информатика',      # название предмета
            '03.09.2024',       # дата когда было задано
            '11.09.2024',       # дата до кокого необходимо выполнить
            'текст задания...'  # текст задания
        ]
    )
) # ничего не возвращает

ClientObject.request(
    api.Requests.DELETE_INFO(
        user_name='Иван',       # имя задание которого вы хотите удалить
        data='03.09.2024'       # дата заданного задания которое вы хотите удалить
    )
) # возвращает список в котором один элемент, успешно или нет прошло удаление

ClientObject.request(
    api.Requests.DELETE_ALL() # ничего не принимает
) # возвращает список в котором один элемент, успешно или нет прошло удаление




"""
все что связано с сервером ------------------------------------------------------------------------------------
"""

# инициализирует сервер на данном хосте и порте
server = api.HWIServer(
    port=utils.LOCAL_PORT, # локальный порт
    host=utils.LOCAL_HOST  # локальный хост
) 

# создает каркас начальной базы данных в локальной директории
server.create_data_base()

# предварительная очистка бд для теста
server.clean_data_base() 

# запускает сервер
server.run()